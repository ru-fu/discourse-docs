---
all:
  application.addons:
    type: "string"
    default: "-"
    description: >-
      Comma-separated list of addons that every application managed by
      AMS will use. See
      [How to enable an addon globally](https://discourse.ubuntu.com/t/enable-an-addon-globally/25285).
  application.auto_publish:
    type: "bool"
    default: "true"
    description: >-
      If set to `true`, AMS automatically published new application
      versions when the bootstrap process is finished. `false`
      disables this. See
      [Publish application versions](https://discourse.ubuntu.com/t/update-an-application/24201#publish-application-versions).
  application.auto_update:
    type: "bool"
    default: "true"
    description: >-
      If set to `true`, AMS automatically updates applications
      whenever any dependencies (parent image, addons, global
      configuration) change. `false` disables this. See
      [Disable automatic application updates](https://discourse.ubuntu.com/t/update-an-application/24201#disable-automatic-updates).
  application.default_abi:
    type: "string"
    default: "-"
    description: >-
      Default Android ABI that applications should use. See
      [Android ABIs](https://developer.android.com/ndk/guides/abis)
      for a list of available ABIs.
  application.max_published_versions:
    type: "integer"
    default: "3"
    description: >-
      Maximum number of published versions per application. If the
      number of versions of an application exceeds this configuration,
      AMS will automatically clean up older versions.
  container.default_platform:
    type: "string"
    default: "-"
    description: >-
      The name of the platform that Anbox uses by default to launch
      containers.
  container.features:
    type: "string"
    default: "-"
    description: >-
      Comma-separated list of features to enable (see list below).
  container.network_proxy:
    type: "string"
    default: "-"
    description: >-
      Network proxy to use inside the containers.
  container.security_updates:
    type: "bool"
    default: "true"
    description: >-
      If set to `true`, automatic Ubuntu security updates are applied
      during the application bootstrap process. `false` disables this.
  core.proxy_http:
    type: "string"
    default: "-"
    description: >-
      HTTP proxy to use for HTTP requests that AMS performs.
  core.proxy_https:
    type: "string"
    default: "-"
    description: >-
      HTTPS proxy to use for HTTPS requests that AMS performs.
  core.proxy_ignore_hosts:
    type: "string"
    default: "-"
    description: >-
      Comma-separated list that defines the hosts for which a
      configured proxy is not used.
  core.trust_password:
    type: "string"
    default: "-"
    description: >-
      The AMS trust password.
  cpu.limit_mode:
    type: "string"
    default: "scheduler"
    description: >-
      The mode AMS uses to limit CPU access for a container. See
      [About performance](https://discourse.ubuntu.com/t/about-performance/29416) for details.
      Possible values are: `scheduler`, `pinning`
  gpu.allocation_mode:
    type: "string"
    default: "`all`"
    description: >-
      Method of allocating GPUs: `all` tells AMS to allocate all
      available GPUs on a system to a container. `single` allocates
      only a single GPU.
  gpu.type:
    type: "string"
    default: "`none`"
    description: >-
      Type of GPU: `none`, `intel`, `nvidia`, `amd`
  images.allow_insecure:
    type: "bool"
    default: "false"
    description: >-
      If set to `true`, AMS allows accepting untrusted certificates
      provided by the configured image server.
  images.auth:
    type: "string"
    default: "-"
    description: >-
      Authentication details for AMS to access the image server. When
      reading this configuration, a Boolean value that indicates
      whether the item is set is returned, to avoid exposing
      credentials.
  images.update_interval:
    type: "string"
    default: "`5m`"
    description: >-
      Frequency of image updates (for example: 1h, 30m).
  images.url:
    type: "string"
    default: "`https://images.anbox-cloud.io/stable/`"
    description: >-
      URL of the image server to use.
  images.version_lockstep:
    type: "bool"
    default: "true"
    description: >-
      Whether to put the version of the latest pulled image and the
      AMS version in a lockstep. This ensures that a deployment is not
      automatically updated to newer image versions if AMS is still at
      an older version. This only applies for new major and minor but
      not patch version updates.
  load_balancer.url:
    type: "string"
    default: "-"
    description: >-
      URL of the load balancer behind which AMS sits. The URL is
      handed to containers started by AMS to allow them to contact AMS
      through the load balancer and not via the address of an
      individual AMS instance.
  node.queue_size:
    type: "integer"
    default: "100"
    description: >-
      Maximum size of the queue containing requests to start and stop
      container per LXD node. Changing the value requires a restart of
      AMS.
  node.workers_per_queue:
    type: "integer"
    default: "4"
    description: >-
      Number of workers processing container start and stop requests.
      Changing the value requires a restart of AMS.
  registry.filter:
    type: "string"
    default: "-"
    description: >-
      Comma-separated list of tags to filter for when applications are
      fetched from the
      [Anbox Application Registry](https://discourse.ubuntu.com/t/application-registry/17761).
      If empty, no filter is applied.
  registry.fingerprint:
    type: "string"
    default: "-"
    description: >-
      Fingerprint of the certificate that the
      [Anbox Application Registry](https://discourse.ubuntu.com/t/application-registry/17761)
      uses to TLS-secure its HTTPS endpoint. This is used by AMS for
      mutual TLS authentication with the registry.
  registry.mode:
    type: "string"
    default: "`pull`"
    description: >-
      Mode in which the
      [Anbox Application Registry](https://discourse.ubuntu.com/t/application-registry/17761)
      client in AMS operates: `manual`, `pull`, `push`
  registry.update_interval:
    type: "string"
    default: "`1h`"
    description: >-
      Frequency of
      [Anbox Application Registry](https://discourse.ubuntu.com/t/application-registry/17761)
      updates (for example: 1h, 30m).
  registry.url:
    type: "string"
    default: "-"
    description: >-
      URL of the
      [Anbox Application Registry](https://discourse.ubuntu.com/t/application-registry/17761)
      to use.
  scheduler.strategy:
    type: "string"
    default: "`spread`"
    description: >-
      Strategy that the internal container scheduler in AMS uses to
      distribute containers across available LXD nodes: `binpack`,
      `spread`
node:
  cpu-allocation-rate:
    type: "integer"
    default: "4"
    description: >-
      CPU allocation rate used for
      [over-committing resources](https://discourse.ubuntu.com/t/about-capacity-planning/28717#overcommitting).
  cpus:
    type: "integer"
    default: "all available"
    description: >-
      Number of CPUs dedicated to Anbox containers.
  gpu-encoder-slots:
    type: "integer"
    default: >-
      0 (for nodes without GPU or with AMD GPU)<br/>32 (for nodes with
      NVIDIA GPU)<br/>10 (for nodes with Intel GPU)
    description: >-
      Number of GPU encoder slots available on the node.
  gpu-slots:
    type: "integer"
    default: >-
      0 (for nodes without GPU)<br/>32 (for nodes with NVIDIA
      GPU)<br/>10 (for nodes with AMD or Intel GPU)
    description: >-
      Number of
      [GPU slots](https://discourse.ubuntu.com/t/about-capacity-planning/28717#gpu-slots)
      available on the node.
  memory:
    type: "integer"
    default: "all available"
    description: >-
      Memory dedicated to Anbox containers.
  memory-allocation-rate:
    type: "integer"
    default: "2"
    description: >-
      Memory allocation rate used for
      [over-committing resources](https://discourse.ubuntu.com/t/about-capacity-planning/28717#overcommitting).
  public-address:
    type: "string"
    default: "-"
    description: >-
      The public, reachable address of the node.
  subnet:
    type: "string"
    default: "-"
    description: >-
      The network subnet of the machine where the node runs.
  tags:
    type: "string"
    default: "-"
    description: >-
      Tags to identify the node.
  unscheduable:
    type: "bool"
    default: "false"
    description: >-
      If set to `true`, the node cannot be scheduled, which prevents
      new containers from being launched on it.
